#############################################################################
# Generated by PAGE version 4.1
# in conjunction with Tcl version 8.6
#    Jan. 11, 2014 11:09:05 PM




#############################################################################
## vTcl Code to Load Stock Images


if {![info exist vTcl(sourcing)]} {
#############################################################################
## Procedure:  vTcl:rename

proc ::vTcl:rename {name} {
    ## This procedure may be used free of restrictions.
    ##    Exception added by Christian Gavin on 08/08/02.
    ## Other packages and widget toolkits have different licensing requirements.
    ##    Please read their license agreements for details.

    regsub -all "\\." $name "_" ret
    regsub -all "\\-" $ret "_" ret
    regsub -all " " $ret "_" ret
    regsub -all "/" $ret "__" ret
    regsub -all "::" $ret "__" ret

    return [string tolower $ret]
}

#############################################################################
## Procedure:  vTcl:image:create_new_image

proc ::vTcl:image:create_new_image {filename {description {no description}} {type {}} {data {}}} {
    ## This procedure may be used free of restrictions.
    ##    Exception added by Christian Gavin on 08/08/02.
    ## Other packages and widget toolkits have different licensing requirements.
    ##    Please read their license agreements for details.
    # Does the image already exist?
    if {[info exists ::vTcl(images,files)]} {
        if {[lsearch -exact $::vTcl(images,files) $filename] > -1} { return }
    }
    if {![info exists ::vTcl(sourcing)] && [string length $data] > 0} {
        set object [image create  [vTcl:image:get_creation_type $filename]  -data $data]
    } else {
        # Wait a minute... Does the file actually exist?
        if {! [file exists $filename] } {
            # Try current directory
            set script [file dirname [info script]]
            set filename [file join $script [file tail $filename] ]
        }

        if {![file exists $filename]} {
            set description "file not found!"
            ## will add 'broken image' again when img is fixed, for
            ## now create empty
            set object [image create photo -width 1 -height 1]
        } else {
            set object [image create  [vTcl:image:get_creation_type $filename]  -file $filename]
        }
    }

    set reference [vTcl:rename $filename]
    set ::vTcl(images,$reference,image)       $object
    set ::vTcl(images,$reference,description) $description
    set ::vTcl(images,$reference,type)        $type
    set ::vTcl(images,filename,$object)       $filename

    lappend ::vTcl(images,files) $filename
    lappend ::vTcl(images,$type) $object
    set ::vTcl(imagefile,$object) $filename   ;# Rozen
    # return image name in case caller might want it
    return $object
}

#############################################################################
## Procedure:  vTcl:image:get_image

proc ::vTcl:image:get_image {filename} {
    ## This procedure may be used free of restrictions.
    ##    Exception added by Christian Gavin on 08/08/02.
    ## Other packages and widget toolkits have different licensing requirements.
    ##    Please read their license agreements for details.

    set reference [vTcl:rename $filename]

    # Let's do some checking first
    if {![info exists ::vTcl(images,$reference,image)]} {
        # Well, the path may be wrong; in that case check
        # only the filename instead, without the path.

        set imageTail [file tail $filename]

        foreach oneFile $::vTcl(images,files) {
            if {[file tail $oneFile] == $imageTail} {
                set reference [vTcl:rename $oneFile]
                break
            }
        }
    }
    # Rozen. There follows a hack in case one wants to rerun a tcl
    # file which contains a file name where an image is expected.
    if {![info exists ::vTcl(images,$reference,image)]} {
        set ::vTcl(images,$reference,image)  [vTcl:image:create_new_image $filename]
    }
    return $::vTcl(images,$reference,image)
}

#############################################################################
## Procedure:  vTcl:image:get_creation_type

proc ::vTcl:image:get_creation_type {filename} {
    ## This procedure may be used free of restrictions.
    ##    Exception added by Christian Gavin on 08/08/02.
    ## Other packages and widget toolkits have different licensing requirements.
    ##    Please read their license agreements for details.

    switch [string tolower [file extension $filename]] {
        .ppm -
        .jpg -
        .bmp -
        .gif    {return photo}
        .xbm    {return bitmap}
        default {return photo}
    }
}

foreach img {


            } {
    eval set _file [lindex $img 0]
    vTcl:image:create_new_image\
        $_file [lindex $img 1] [lindex $img 2] [lindex $img 3]
}

}
#############################################################################
## vTcl Code to Load User Images

catch {package require Img}

foreach img {

        {{$[pwd]s/Josh/Desktop/EasyMiner/address.png} {file not found!} user {}}

            } {
    eval set _file [lindex $img 0]
    vTcl:image:create_new_image\
        $_file [lindex $img 1] [lindex $img 2] [lindex $img 3]
}

set vTcl(actual_gui_bg) SystemButtonFace
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) SystemButtonFace
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) SystemButtonFace
set vTcl(analog_color_p) SystemButtonFace
set vTcl(analog_color_m) SystemButtonFace
set vTcl(active_fg) #111111
#############################################################################
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top34
    namespace eval ::widgets::$base {
        set set,origin 1
        set set,size 1
        set runvisible 1
    }
    set site_4_0 .top34.tNo44.pg0 
    set site_4_0 $site_4_0
    set site_4_1 .top34.tNo44.pg1 
    set site_4_0 $site_4_1
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# USER DEFINED PROCEDURES
#

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow. {base} {
    if {$base == ""} {
        set base .
    }
    ###################
    # CREATING WIDGETS
    ###################
    wm focusmodel $top passive
    wm geometry $top 200x200+25+25; update
    wm maxsize $top 1924 1062
    wm minsize $top 116 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm withdraw $top
    wm title $top "page"
    bindtags $top "$top Page all"
    ###################
    # SETTING GEOMETRY
    ###################

    vTcl:FireEvent $base <<Ready>>
}

proc vTclWindow.top34 {base} {
    if {$base == ""} {
        set base .top34
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl:toplevel $top -class Toplevel \
        -menu "$top.m37" -background SystemButtonFace -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 600x215+372+536; update
    wm maxsize $top 1924 1062
    wm minsize $top 116 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "New Toplevel 1"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    bindtags $top "$top Toplevel all _TopLevel"
    ttk::style configure TNotebook -background SystemButtonFace
    ttk::style configure TNotebook.Tab -background SystemButtonFace
    ttk::style configure TNotebook.Tab -foreground #000000
    ttk::style configure TNotebook.Tab -font TkDefaultFont
    ttk::style map TNotebook.Tab -background [list disabled SystemButtonFace selected SystemButtonFace]
    ttk::notebook $top.tNo44 \
        -width 584 -height 196 -takefocus {} 
    vTcl:DefineAlias "$top.tNo44" "TNotebook1" vTcl:WidgetProc "Toplevel1" 1
    frame .top34.tNo44.pg0 -background SystemButtonFace
    $top.tNo44 add .top34.tNo44.pg0 \
        -padding 0 -sticky nsew -state normal -text {Start Mining} -image {} \
        -compound none -underline -1 
    set site_4_0  $top.tNo44.pg0
    ttk::style configure TButton -background SystemButtonFace
    ttk::style configure TButton -foreground #000000
    ttk::style configure TButton -font TkDefaultFont
    ttk::button $site_4_0.tBu52 \
        -command start -takefocus {} -text {Start/Stop Mining} 
    vTcl:DefineAlias "$site_4_0.tBu52" "TButton1" vTcl:WidgetProc "Toplevel1" 1
    label $site_4_0.lab53 \
        -activebackground {#ffffff} -activeforeground black \
        -background SystemButtonFace -disabledforeground {#b4b4b4} \
        -foreground {#000000} -highlightcolor black -text {Bitcoin Address:} 
    vTcl:DefineAlias "$site_4_0.lab53" "Label1" vTcl:WidgetProc "Toplevel1" 1
    entry $site_4_0.ent54 \
        -background white -disabledforeground {#b4b4b4} -font font11 \
        -foreground {#000000} -highlightcolor black -insertbackground black \
        -selectbackground {#d8d8d8} -selectforeground black \
        -textvariable address 
    vTcl:DefineAlias "$site_4_0.ent54" "Entry1" vTcl:WidgetProc "Toplevel1" 1
    ttk::progressbar $site_4_0.tPr35 \
        -variable bar 
    vTcl:DefineAlias "$site_4_0.tPr35" "TProgressbar1" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_0.tLa36 \
        -background {#000000} -foreground {#000000} -relief flat \
        -text ______________________________________________________________________________________________________________________________________________________________ 
    vTcl:DefineAlias "$site_4_0.tLa36" "TLabel7" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_0.tLa37 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {} -textvariable mininglabel 
    vTcl:DefineAlias "$site_4_0.tLa37" "TLabel8" vTcl:WidgetProc "Toplevel1" 1
    place $site_4_0.tBu52 \
        -in $site_4_0 -x 232 -y 87 -width 116 -height 25 -anchor nw \
        -bordermode ignore 
    place $site_4_0.lab53 \
        -in $site_4_0 -x 10 -y 17 -width 91 -height 21 -anchor nw \
        -bordermode ignore 
    place $site_4_0.ent54 \
        -in $site_4_0 -x 110 -y 19 -width 454 -height 20 -anchor nw \
        -bordermode ignore 
    place $site_4_0.tPr35 \
        -in $site_4_0 -x 454 -y 142 -width 120 -height 22 -anchor nw \
        -bordermode ignore 
    place $site_4_0.tLa36 \
        -in $site_4_0 -x -108 -y 133 -width 794 -height 1 -anchor nw \
        -bordermode ignore 
    place $site_4_0.tLa37 \
        -in $site_4_0 -x 10 -y 144 -width 436 -height 19 -anchor nw \
        -bordermode ignore 
    frame .top34.tNo44.pg1 -background SystemButtonFace
    $top.tNo44 add .top34.tNo44.pg1 \
        -padding 0 -sticky nsew -state normal -text Info -image {} \
        -compound none -underline -1 
    set site_4_1  $top.tNo44.pg1
    ttk::label $site_4_1.tLa46 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {Version: Bitcoin x32 Beta + CGMiner} 
    vTcl:DefineAlias "$site_4_1.tLa46" "TLabel1" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_1.tLa47 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {Created: 01/11/2014} 
    vTcl:DefineAlias "$site_4_1.tLa47" "TLabel2" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_1.tLa48 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {This software was created by Argutus1 on Reddit.} 
    vTcl:DefineAlias "$site_4_1.tLa48" "TLabel3" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_1.tLa49 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {This software may be edited and redistributed on the condition that this page will not be edited.} 
    vTcl:DefineAlias "$site_4_1.tLa49" "TLabel4" vTcl:WidgetProc "Toplevel1" 1
    ttk::label $site_4_1.tLa51 \
        -background SystemButtonFace -foreground {#000000} -relief flat \
        -text {Bitcoind or qt must be running to use this software. The config file also must have server mode enabled.} 
    vTcl:DefineAlias "$site_4_1.tLa51" "TLabel6" vTcl:WidgetProc "Toplevel1" 1
    ttk::style configure TButton -background SystemButtonFace
    ttk::style configure TButton -foreground #000000
    ttk::style configure TButton -font TkDefaultFont
    ttk::button $site_4_1.tBu40 \
        \
        -command {root.clipboard_clear()
root.clipboard_append('13GGffkBfcf8nbfBE2qxnxgpqXAbjEyehF')} \
        -takefocus {} \
        -text {Donations may be sent to: 13GGffkBfcf8nbfBE2qxnxgpqXAbjEyehF} 
    vTcl:DefineAlias "$site_4_1.tBu40" "TButton2" vTcl:WidgetProc "Toplevel1" 1
    label $site_4_1.lab43 \
        -activebackground {#ffffff} -activeforeground black \
        -background SystemButtonFace -disabledforeground {#b4b4b4} \
        -foreground {#000000} -highlightcolor black \
        -image [vTcl:image:get_image [file join C:/ Users Josh Desktop EasyMiner address.png]] \
        -text Label 
    vTcl:DefineAlias "$site_4_1.lab43" "Label2" vTcl:WidgetProc "Toplevel1" 1
    place $site_4_1.tLa46 \
        -in $site_4_1 -x 10 -y 10 -anchor nw -bordermode ignore 
    place $site_4_1.tLa47 \
        -in $site_4_1 -x 10 -y 30 -anchor nw -bordermode ignore 
    place $site_4_1.tLa48 \
        -in $site_4_1 -x 10 -y 50 -width 263 -height 19 -anchor nw \
        -bordermode ignore 
    place $site_4_1.tLa49 \
        -in $site_4_1 -x 10 -y 129 -width 511 -height 19 -anchor nw \
        -bordermode ignore 
    place $site_4_1.tLa51 \
        -in $site_4_1 -x 10 -y 149 -width 576 -height 19 -anchor nw \
        -bordermode ignore 
    place $site_4_1.tBu40 \
        -in $site_4_1 -x 13 -y 71 -width 366 -height 25 -anchor nw \
        -bordermode ignore 
    place $site_4_1.lab43 \
        -in $site_4_1 -x 490 -y 6 -width 84 -height 84 -anchor nw \
        -bordermode ignore 
    menu $top.m37 \
        -activebackground SystemButtonFace -activeforeground black \
        -background SystemButtonFace -font font10 -foreground {#000000} \
        -tearoff 0 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tNo44 \
        -in $top -x 10 -y 10 -width 584 -height 196 -anchor nw \
        -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

Window show .
Window show .top34

